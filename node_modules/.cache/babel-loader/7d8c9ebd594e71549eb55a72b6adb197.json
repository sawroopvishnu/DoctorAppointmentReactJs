{"ast":null,"code":"import _slicedToArray from \"E:\\\\React Js Work\\\\doctor-appointment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\React Js Work\\\\doctor-appointment\\\\src\\\\compoent\\\\DoctorDashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './Navbar'; // Create a Navbar component\n\nimport DoctorProfile from './DoctorProfile'; // Create a DoctorProfile component\n\nimport AppointmentList from './AppointmentList'; // Create an AppointmentList component\n\nimport AppointmentCard from './AppointmentCard'; // Create an AppointmentCard component\n\nimport AppointmentDetails from './AppointmentDetails'; // Create an AppointmentDetails component\n\nimport AppointmentActions from './AppointmentActions'; // Create an AppointmentActions component\n\nimport axios from 'axios'; // Import Axios for making API requests\n\nfunction DoctorDashboard() {\n  var _this = this;\n\n  // Define state variables for doctor data and appointments\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      doctor = _useState2[0],\n      setDoctor = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      appointments = _useState4[0],\n      setAppointments = _useState4[1]; // Use the useEffect hook to fetch data when the component mounts\n\n\n  useEffect(function () {\n    // Fetch doctor profile data from the backend\n    axios.get('http://your-backend-api-url/doctor-profile-endpoint').then(function (response) {\n      setDoctor(response.data);\n    }).catch(function (error) {\n      console.error('Error fetching doctor profile:', error);\n    }); // Fetch doctor's appointments from the backend\n\n    axios.get('http://your-backend-api-url/appointments-endpoint').then(function (response) {\n      setAppointments(response.data);\n    }).catch(function (error) {\n      console.error('Error fetching appointments:', error);\n    });\n  }, []); // The empty dependency array ensures this effect runs once on component mount\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"doctor-dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/doctorprofile\",\n    render: function render() {\n      return /*#__PURE__*/React.createElement(DoctorProfile, {\n        doctor: doctor,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 54\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/appointmentlist\",\n    render: function render() {\n      return /*#__PURE__*/React.createElement(AppointmentList, {\n        appointments: appointments,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 56\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/appointmentcard\",\n    component: AppointmentCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/appointmentdetails\",\n    component: AppointmentDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/appointmentactions\",\n    component: AppointmentActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default DoctorDashboard;","map":{"version":3,"sources":["E:/React Js Work/doctor-appointment/src/compoent/DoctorDashboard.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","Navbar","DoctorProfile","AppointmentList","AppointmentCard","AppointmentDetails","AppointmentActions","axios","DoctorDashboard","doctor","setDoctor","appointments","setAppointments","get","then","response","data","catch","error","console"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './Navbar'; // Create a Navbar component\r\nimport DoctorProfile from './DoctorProfile'; // Create a DoctorProfile component\r\nimport AppointmentList from './AppointmentList'; // Create an AppointmentList component\r\nimport AppointmentCard from './AppointmentCard'; // Create an AppointmentCard component\r\nimport AppointmentDetails from './AppointmentDetails'; // Create an AppointmentDetails component\r\nimport AppointmentActions from './AppointmentActions'; // Create an AppointmentActions component\r\nimport axios from 'axios'; // Import Axios for making API requests\r\n\r\nfunction DoctorDashboard() {\r\n  // Define state variables for doctor data and appointments\r\n  const [doctor, setDoctor] = useState(null);\r\n  const [appointments, setAppointments] = useState([]);\r\n  \r\n  // Use the useEffect hook to fetch data when the component mounts\r\n  useEffect(() => {\r\n    // Fetch doctor profile data from the backend\r\n    axios.get('http://your-backend-api-url/doctor-profile-endpoint')\r\n      .then(response => {\r\n        setDoctor(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctor profile:', error);\r\n      });\r\n\r\n    // Fetch doctor's appointments from the backend\r\n    axios.get('http://your-backend-api-url/appointments-endpoint')\r\n      .then(response => {\r\n        setAppointments(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching appointments:', error);\r\n      });\r\n  }, []); // The empty dependency array ensures this effect runs once on component mount\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"doctor-dashboard\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/doctorprofile\" render={() => <DoctorProfile doctor={doctor} />} />\r\n          <Route path=\"/appointmentlist\" render={() => <AppointmentList appointments={appointments} />} />\r\n          <Route path=\"/appointmentcard\" component={AppointmentCard} />\r\n          <Route path=\"/appointmentdetails\" component={AppointmentDetails} />\r\n          <Route path=\"/appointmentactions\" component={AppointmentActions} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default DoctorDashboard;\r\n"]},"metadata":{},"sourceType":"module"}