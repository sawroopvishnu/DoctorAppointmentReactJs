{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\React Js Work\\\\Doctot-Appointments-App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\React Js Work\\\\Doctot-Appointments-App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:\\\\React Js Work\\\\Doctot-Appointments-App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\React Js Work\\\\Doctot-Appointments-App\\\\src\\\\compoent\\\\CreateAppointment.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AppointmentForm.css';\n\nvar CreateAppointment = function CreateAppointment() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      doctor = _useState2[0],\n      setDoctor = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedDoctor = _useState4[0],\n      setSelectedDoctor = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      patient = _useState6[0],\n      setPatient = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedPatient = _useState8[0],\n      setSelectedPatient = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedDate = _useState10[0],\n      setSelectedDate = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedTime = _useState12[0],\n      setSelectedTime = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      patientName = _useState14[0],\n      setPatientName = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      age = _useState16[0],\n      setAge = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      address = _useState18[0],\n      setAddress = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      contactNo = _useState20[0],\n      setContactNo = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      notes = _useState22[0],\n      setNotes = _useState22[1];\n\n  useEffect(function () {\n    // Fetch doctors data and update the state\n    axios.get('http://localhost:9096/api/doctors/getalldoctor').then(function (response) {\n      setDoctor(response.data);\n    }).catch(function (error) {\n      console.error('Error fetching doctors:', error);\n    }); // Fetch patients data and update the state\n\n    axios.get('http://localhost:9096/api/patients/getAllPatient').then(function (response) {\n      setPatient(response.data);\n    }).catch(function (error) {\n      console.error('Error fetching patients:', error);\n    });\n  }, []);\n\n  var handlePatientChange = function handlePatientChange(event) {\n    setSelectedPatient(event.target.value);\n  };\n\n  var handleDoctorChange = function handleDoctorChange(event) {\n    setSelectedDoctor(event.target.value);\n  };\n\n  var handleDateChange = function handleDateChange(event) {\n    setSelectedDate(event.target.value);\n  };\n\n  var handleTimeChange = function handleTimeChange(event) {\n    setSelectedTime(event.target.value);\n  };\n\n  var handlePatientNameChange = function handlePatientNameChange(event) {\n    setPatientName(event.target.value);\n  };\n\n  var handleAgeChange = function handleAgeChange(event) {\n    setAge(event.target.value);\n  };\n\n  var handleAddressChange = function handleAddressChange(event) {\n    setAddress(event.target.value);\n  };\n\n  var handleContactNoChange = function handleContactNoChange(event) {\n    setContactNo(event.target.value);\n  };\n\n  var handleNotesChange = function handleNotesChange(event) {\n    setNotes(event.target.value);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var formData, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            _context.prev = 1;\n            formData = new FormData();\n            formData.append('doctorId', selectedDoctor);\n            formData.append('patientId', selectedPatient);\n            formData.append('appointmentDateTime', \"\".concat(selectedDate, \" \").concat(selectedTime));\n            formData.append('patientName', patientName);\n            formData.append('age', age);\n            formData.append('address', address);\n            formData.append('contactNo', contactNo);\n            formData.append('notes', notes); // formData.append('patientReport', selectedReport);\n\n            console.log(\"appointment creating\", formData); // Make API call to send formData to the backend API for appointment scheduling\n            //const response = await axios.post('http://localhost:9096/api/appointments/createAppointment', formData);\n\n            _context.next = 14;\n            return axios.post('http://localhost:9096/api/appointments/createAppointment', formData, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 14:\n            response = _context.sent;\n            console.log('Appointment created:', response.data);\n            alert('Appointment scheduled successfully!');\n            window.location.href = '/patientlogin';\n            _context.next = 24;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](1);\n            console.error('Error creating appointment:', _context.t0);\n            alert('Error creating appointment. Please try again.');\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 20]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appointment-form-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Schedule an Appointment\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"appointment-form\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"doctor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Select Doctor:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"doctor\",\n    value: selectedDoctor,\n    onChange: handleDoctorChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Select a doctor\"), doctor.map(function (doctor) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: doctor.id,\n      value: doctor.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, doctor.fullName);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"patient\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Select Patient:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"patient\",\n    value: selectedPatient,\n    onChange: handlePatientChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Select a patient\"), patient.map(function (patient) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: patient.id,\n      value: patient.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, patient.fullName);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Select Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"date\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Select Time:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"time\",\n    id: \"time\",\n    value: selectedTime,\n    onChange: handleTimeChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"notes\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Notes (optional):\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"notes\",\n    value: notes,\n    onChange: handleNotesChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"patientName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Patient Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"patientName\",\n    value: patientName,\n    onChange: handlePatientNameChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, \"Patient Age:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"age\",\n    value: age,\n    onChange: handleAgeChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, \"Patient Address:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"address\",\n    value: address,\n    onChange: handleAddressChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contactNo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"Patient Contact No:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"tel\",\n    id: \"contactNo\",\n    value: contactNo,\n    onChange: handleContactNoChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, \"Schedule Appointment\")));\n};\n\nexport default CreateAppointment;","map":{"version":3,"sources":["E:/React Js Work/Doctot-Appointments-App/src/compoent/CreateAppointment.js"],"names":["React","useState","useEffect","axios","CreateAppointment","doctor","setDoctor","selectedDoctor","setSelectedDoctor","patient","setPatient","selectedPatient","setSelectedPatient","selectedDate","setSelectedDate","selectedTime","setSelectedTime","patientName","setPatientName","age","setAge","address","setAddress","contactNo","setContactNo","notes","setNotes","get","then","response","data","catch","error","console","handlePatientChange","event","target","value","handleDoctorChange","handleDateChange","handleTimeChange","handlePatientNameChange","handleAgeChange","handleAddressChange","handleContactNoChange","handleNotesChange","handleSubmit","preventDefault","formData","FormData","append","log","post","headers","alert","window","location","href","map","id","fullName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './AppointmentForm.css';\r\n\r\nconst CreateAppointment = () => {\r\n  const [doctor, setDoctor] = useState([]);\r\n  const [selectedDoctor, setSelectedDoctor] = useState('');\r\n  const [patient, setPatient] = useState([]);\r\n  const [selectedPatient, setSelectedPatient] = useState('');\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n  const [patientName, setPatientName] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [contactNo, setContactNo] = useState('');\r\n  const [notes, setNotes] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch doctors data and update the state\r\n    axios.get('http://localhost:9096/api/doctors/getalldoctor')\r\n      .then(response => {\r\n        setDoctor(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctors:', error);\r\n      });\r\n\r\n    // Fetch patients data and update the state\r\n    axios.get('http://localhost:9096/api/patients/getAllPatient')\r\n      .then(response => {\r\n        setPatient(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching patients:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handlePatientChange = (event) => {\r\n    setSelectedPatient(event.target.value);\r\n  };\r\n\r\n  const handleDoctorChange = (event) => {\r\n    setSelectedDoctor(event.target.value);\r\n  };\r\n\r\n  const handleDateChange = (event) => {\r\n    setSelectedDate(event.target.value);\r\n  };\r\n\r\n  const handleTimeChange = (event) => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handlePatientNameChange = (event) => {\r\n    setPatientName(event.target.value);\r\n  };\r\n\r\n  const handleAgeChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  const handleAddressChange = (event) => {\r\n    setAddress(event.target.value);\r\n  };\r\n\r\n  const handleContactNoChange = (event) => {\r\n    setContactNo(event.target.value);\r\n  };\r\n\r\n  const handleNotesChange = (event) => {\r\n    setNotes(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('doctorId', selectedDoctor);\r\n      formData.append('patientId', selectedPatient);\r\n      formData.append('appointmentDateTime', `${selectedDate} ${selectedTime}`);\r\n      formData.append('patientName', patientName);\r\n      formData.append('age', age);\r\n      formData.append('address', address);\r\n      formData.append('contactNo', contactNo);\r\n      formData.append('notes', notes);\r\n      // formData.append('patientReport', selectedReport);\r\n      console.log(\"appointment creating\" ,formData )\r\n      // Make API call to send formData to the backend API for appointment scheduling\r\n      //const response = await axios.post('http://localhost:9096/api/appointments/createAppointment', formData);\r\n      const response = await axios.post('http://localhost:9096/api/appointments/createAppointment', formData, {\r\n      headers: {\r\n      'Content-Type': 'application/json',\r\n      },\r\n     });\r\n    \r\n      console.log('Appointment created:', response.data);\r\n      alert('Appointment scheduled successfully!');\r\n      window.location.href = '/patientlogin';\r\n    } catch (error) {\r\n      console.error('Error creating appointment:', error);\r\n      alert('Error creating appointment. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"appointment-form-container\">\r\n      <h2>Schedule an Appointment</h2>\r\n      <form className=\"appointment-form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"doctor\">Select Doctor:</label>\r\n          <select id=\"doctor\" value={selectedDoctor} onChange={handleDoctorChange} required>\r\n            <option value=\"\">Select a doctor</option>\r\n            {doctor.map((doctor) => (\r\n              <option key={doctor.id} value={doctor.id}>\r\n                {doctor.fullName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"patient\">Select Patient:</label>\r\n          <select id=\"patient\" value={selectedPatient} onChange={handlePatientChange} required>\r\n            <option value=\"\">Select a patient</option>\r\n            {patient.map((patient) => (\r\n              <option key={patient.id} value={patient.id}>\r\n                {patient.fullName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"date\">Select Date:</label>\r\n          <input type=\"date\" id=\"date\" value={selectedDate} onChange={handleDateChange} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"time\">Select Time:</label>\r\n          <input type=\"time\" id=\"time\" value={selectedTime} onChange={handleTimeChange} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"notes\">Notes (optional):</label>\r\n          <textarea id=\"notes\" value={notes} onChange={handleNotesChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"patientName\">Patient Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"patientName\"\r\n            value={patientName}\r\n            onChange={handlePatientNameChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"age\">Patient Age:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"age\"\r\n            value={age}\r\n            onChange={handleAgeChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"address\">Patient Address:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"address\"\r\n            value={address}\r\n            onChange={handleAddressChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"contactNo\">Patient Contact No:</label>\r\n          <input\r\n            type=\"tel\"\r\n            id=\"contactNo\"\r\n            value={contactNo}\r\n            onChange={handleContactNoChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Schedule Appointment</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAppointment;\r\n"]},"metadata":{},"sourceType":"module"}